import{_ as l}from"./chunks/05-12-top5-trend_12_0.CzgqCLRq.js";import{_ as d,c as p,m as t,b as i,w as n,K as e,V as s,o as a,a as h}from"./chunks/framework.DZLj5U16.js";const w=JSON.parse('{"title":"5 Most Popular Languages on AO3: Trend","description":"","frontmatter":{},"headers":[],"relativePath":"ao3-2021/05-12-top5-trend.md","filePath":"ao3-2021/05-12-top5-trend.md"}'),r={name:"ao3-2021/05-12-top5-trend.md"},k=s(`<h1 id="_5-most-popular-languages-on-ao3-trend" tabindex="-1">5 Most Popular Languages on AO3: Trend <a class="header-anchor" href="#_5-most-popular-languages-on-ao3-trend" aria-label="Permalink to &quot;5 Most Popular Languages on AO3: Trend&quot;">​</a></h1><p>tags: Python Pandas matplotlib datetime</p><p>In this section, we&#39;ll work with the date and language columns in the data set, and briefly touch base with the datetime object in Pandas.</p><nav class="table-of-contents"><ul><li><a href="#loading-file">Loading File</a></li><li><a href="#datetime-in-pandas">Datetime in Pandas</a></li><li><a href="#reshaping-dataframe-with-pivot-table">Reshaping Dataframe with Pivot_table()</a></li><li><a href="#plotting-the-trend-in-language">Plotting The Trend in Language</a></li></ul></nav><h2 id="loading-file" tabindex="-1">Loading File <a class="header-anchor" href="#loading-file" aria-label="Permalink to &quot;Loading File&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load Python library</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/pi/Downloads/works-20210226.csv&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chunker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(path, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chunksize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">works </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.concat(chunker, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ignore_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Select two columns that we&#39;re interested in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> works[[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;creation date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]].copy()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Drop NA values</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lang_date.dropna()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Preview of the DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_date</span></span></code></pre></div>`,7),o=t("pre",null,[t("code",null,`.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
`)],-1),g=s('<table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>creation date</th><th>language</th></tr></thead><tbody><tr><th>0</th><td>2021-02-26</td><td>en</td></tr><tr><th>1</th><td>2021-02-26</td><td>en</td></tr><tr><th>2</th><td>2021-02-26</td><td>en</td></tr><tr><th>3</th><td>2021-02-26</td><td>en</td></tr><tr><th>4</th><td>2021-02-26</td><td>en</td></tr><tr><th>...</th><td>...</td><td>...</td></tr><tr><th>7269688</th><td>2008-09-13</td><td>en</td></tr><tr><th>7269689</th><td>2008-09-13</td><td>en</td></tr><tr><th>7269690</th><td>2008-09-13</td><td>en</td></tr><tr><th>7269691</th><td>2008-09-13</td><td>en</td></tr><tr><th>7269692</th><td>2008-09-13</td><td>en</td></tr></tbody></table><p>7269603 rows × 2 columns</p>',2),E=s(`<h2 id="datetime-in-pandas" tabindex="-1">Datetime in Pandas <a class="header-anchor" href="#datetime-in-pandas" aria-label="Permalink to &quot;Datetime in Pandas&quot;">​</a></h2><p>Now we want to do some data manipulation. Fistly, we want to find the number of works posted in each language every month from the year of 2008 to 2021. To do this, we are going to group the DataFrame by month and by language.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make sure the date column is in datetime format</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_date[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;creation date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.to_datetime(lang_date[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;creation date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Group the date column by &quot;month&quot; (freq=&quot;1M&quot;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pd.Grouper(key, freq) is used instead of pd.Series.dt.year</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># because it does not aggregate month over multiple years</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Group the language column by counting each language</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lang_date.groupby([pd.Grouper(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;creation date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">freq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1M&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]).size().reset_index()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_count.columns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;count&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lang_count</span></span></code></pre></div>`,4),y=t("pre",null,[t("code",null,`.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
`)],-1),c=s('<table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>date</th><th>language</th><th>count</th></tr></thead><tbody><tr><th>0</th><td>2008-09-30</td><td>en</td><td>928</td></tr><tr><th>1</th><td>2008-10-31</td><td>de</td><td>1</td></tr><tr><th>2</th><td>2008-10-31</td><td>en</td><td>480</td></tr><tr><th>3</th><td>2008-11-30</td><td>en</td><td>337</td></tr><tr><th>4</th><td>2008-12-31</td><td>en</td><td>239</td></tr><tr><th>...</th><td>...</td><td>...</td><td>...</td></tr><tr><th>3423</th><td>2021-02-28</td><td>uk</td><td>28</td></tr><tr><th>3424</th><td>2021-02-28</td><td>vi</td><td>131</td></tr><tr><th>3425</th><td>2021-02-28</td><td>wuu</td><td>16</td></tr><tr><th>3426</th><td>2021-02-28</td><td>yue</td><td>41</td></tr><tr><th>3427</th><td>2021-02-28</td><td>zh</td><td>7261</td></tr></tbody></table><p>3428 rows × 3 columns</p>',2),u=s(`<h2 id="reshaping-dataframe-with-pivot-table" tabindex="-1">Reshaping Dataframe with Pivot_table() <a class="header-anchor" href="#reshaping-dataframe-with-pivot-table" aria-label="Permalink to &quot;Reshaping Dataframe with Pivot_table()&quot;">​</a></h2><p>Continue with data manipulation. Here we&#39;re only interested in the trend of 5 most popular languages on AO3. From previous post, the 5 languages are &#39;en&#39;,&#39;zh&#39;,&#39;ru&#39;,&#39;es&#39;, and &#39;fr&#39;.</p><p>To make our selection process easier and to pave the road for visualization, we use <code>pivot_table()</code> in Pandas to reshape the DataFrame, using date as the index, and the languages as columns.</p><p>Let me show you how the new DataFrame looks like.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use pivot_table() for easy visualization</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 5 most popular languages as subset</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The list of language is obtained from previous analysis</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lang_count.pivot_table(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">values</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;count&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zh&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ru&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subset</span></span></code></pre></div>`,5),_=t("pre",null,[t("code",null,`.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
`)],-1),F=s('<table border="1" class="dataframe"><thead><tr style="text-align:right;"><th>language</th><th>en</th><th>zh</th><th>ru</th><th>es</th><th>fr</th></tr><tr><th>date</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><th>2008-09-30</th><td>928.0</td><td>NaN</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><th>2008-10-31</th><td>480.0</td><td>NaN</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><th>2008-11-30</th><td>337.0</td><td>NaN</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><th>2008-12-31</th><td>239.0</td><td>NaN</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><th>2009-01-31</th><td>499.0</td><td>NaN</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><th>...</th><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><th>2020-10-31</th><td>141120.0</td><td>6359.0</td><td>2092.0</td><td>2116.0</td><td>673.0</td></tr><tr><th>2020-11-30</th><td>122796.0</td><td>5201.0</td><td>1591.0</td><td>1791.0</td><td>770.0</td></tr><tr><th>2020-12-31</th><td>154417.0</td><td>5724.0</td><td>1576.0</td><td>1860.0</td><td>739.0</td></tr><tr><th>2021-01-31</th><td>147813.0</td><td>6567.0</td><td>3995.0</td><td>2519.0</td><td>655.0</td></tr><tr><th>2021-02-28</th><td>137125.0</td><td>7261.0</td><td>4265.0</td><td>1947.0</td><td>803.0</td></tr></tbody></table><p>150 rows × 5 columns</p>',2),m=s(`<h2 id="plotting-the-trend-in-language" tabindex="-1">Plotting The Trend in Language <a class="header-anchor" href="#plotting-the-trend-in-language" aria-label="Permalink to &quot;Plotting The Trend in Language&quot;">​</a></h2><p>Having prepared our data, we can now move on to visualization.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Import libraries</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Top line is Jupyter Notebook specific</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">matplotlib inline</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> matplotlib.pyplot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plt</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Plotting the graph with Pandas</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The .plot() method is a simple wrapper around plt.plot()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use figsize to control the size of the graph</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subset.plot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">subplots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">figsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Language Trend on AO3 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2008-2021&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+l+'" alt="png"></p><p>Note that the graph displays monthly postings in each language from 2008 to 2021. You can see from the graph when users started to post in particular language, and when the interest in that language peaked throughout the years.</p>',6);function A(b,D,v,f,C,T){return a(),p("div",null,[k,t("div",null,[(a(),i(e("style"),null,{default:n(()=>[h(" .dataframe tbody tr th:only-of-type { vertical-align: middle; } "),o]),_:1})),g]),E,t("div",null,[(a(),i(e("style"),null,{default:n(()=>[h(" .dataframe tbody tr th:only-of-type { vertical-align: middle; } "),y]),_:1})),c]),u,t("div",null,[(a(),i(e("style"),null,{default:n(()=>[h(" .dataframe tbody tr th:only-of-type { vertical-align: middle; } "),_]),_:1})),F]),m])}const P=d(r,[["render",A]]);export{w as __pageData,P as default};
