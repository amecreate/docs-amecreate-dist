import{_ as i,c as s,m as t,b as n,w as d,K as r,V as e,o as a,a as l}from"./chunks/framework.DZLj5U16.js";const A=JSON.parse('{"title":"AO3 and its first data release","description":"","frontmatter":{},"headers":[],"relativePath":"ao3-2021/AO3_and_its_first_data_release.md","filePath":"ao3-2021/AO3_and_its_first_data_release.md"}'),o={name:"ao3-2021/AO3_and_its_first_data_release.md"},h=e(`<h1 id="ao3-and-its-first-data-release" tabindex="-1">AO3 and its first data release <a class="header-anchor" href="#ao3-and-its-first-data-release" aria-label="Permalink to &quot;AO3 and its first data release&quot;">â€‹</a></h1><p>Archiveofourown.org (AO3) is a fan-created, fan-run, nonprofit, noncommercial archive for transformative fanworks. At the time of this writing, it has more than 42,750 fandoms, 3,547,000 users, and 7,428,000 works.</p><p>On 2021-03-21, the Archive released a <a href="https://archiveofourown.org/admin_posts/18804" target="_blank" rel="noreferrer">Selective data dump for fan statisticians</a>. The data comes in two CSV files, described as follows:</p><p>The first includes information about works:</p><ul><li>creation date</li><li>language</li><li>word count</li><li>restricted or not</li><li>complete or not</li><li>associated tag IDs</li></ul><p>The second provides the key to the tag IDs:</p><ul><li>tag ID</li><li>tag type (e.g. Warning, Fandom, Relationship)</li><li>tag name (unless the tag has fewer than 5 uses)</li><li>canonical or not</li><li>an approximate number of uses</li><li>merger ID (i.e. the tag&#39;s canonical version, if it has one)</li></ul><p>There are endless possibilities with this data set, we can:</p><ul><li>Find out most popular languages</li><li>Visualize language trend</li><li>Analyze users&#39; posting habits</li><li>Look into the seasonality of users&#39; writing habits</li><li>Text mining and sentiment analysis</li><li>Word frequency, Topic modeling, etc</li></ul><p>Let&#39;s start off with today&#39;s topic: Language Trend</p><p>The following code is written in Python and executed in Jupyter Notebook. You can follow along, or check out the <a href="https://github.com/amecreate/ao3-data-vis" target="_blank" rel="noreferrer">github repository</a> for this project.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load python libraries</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sneak peek of the data that we&#39;re going to work on</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/pi/Downloads/works-20210226.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nrows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,12),p=t("pre",null,[t("code",null,`.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
`)],-1),c=e('<table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>creation date</th><th>language</th><th>restricted</th><th>complete</th><th>word_count</th><th>tags</th><th>Unnamed: 6</th></tr></thead><tbody><tr><th>0</th><td>2021-02-26</td><td>en</td><td>False</td><td>True</td><td>388</td><td>10+414093+1001939+4577144+1499536+110+4682892+...</td><td>NaN</td></tr><tr><th>1</th><td>2021-02-26</td><td>en</td><td>False</td><td>True</td><td>1638</td><td>10+20350917+34816907+23666027+23269305+2326930...</td><td>NaN</td></tr><tr><th>2</th><td>2021-02-26</td><td>en</td><td>False</td><td>True</td><td>1502</td><td>10+10613413+9780526+3763877+3741104+7657229+30...</td><td>NaN</td></tr><tr><th>3</th><td>2021-02-26</td><td>en</td><td>False</td><td>True</td><td>100</td><td>10+15322+54862755+20595867+32994286+663+471751...</td><td>NaN</td></tr><tr><th>4</th><td>2021-02-26</td><td>en</td><td>False</td><td>True</td><td>994</td><td>11+721553+54604+1439500+3938423+53483274+54862...</td><td>NaN</td></tr></tbody></table>',1);function _(g,u,k,f,m,y){return a(),s("div",null,[h,t("div",null,[(a(),n(r("style"),null,{default:d(()=>[l(" .dataframe tbody tr th:only-of-type { vertical-align: middle; } "),p]),_:1})),c])])}const T=i(o,[["render",_]]);export{A as __pageData,T as default};
